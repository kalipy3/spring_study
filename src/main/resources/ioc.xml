<?xml version="1.0" encoding="utf-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd">
  
  

    <!-- 注册一个Person对象，Spring对自动创建这个对象 -->
    <!-- 一个Bean标签可以注册一个组件(对象 类) -->
    <bean id="person01" class="com.ly.Person">
        <!-- property标签为Person对象的属性赋值 -->
        <property name="lastName" value="hanser"></property>
        <property name="age" value="18"></property>
        <property name="email" value="hanser@qq.com"></property>
        <property name="gender" value="女"></property>
    </bean>
    
    <bean id="person02" class="com.ly.Person">
        <property name="lastName" value="yousa"></property>
    </bean>
    
    <bean id="person03" class="com.ly.Person">
        <!-- 调用有参构造器进行创建对象并赋值 -->
        <!-- public Person(String lastName, Integer age, String gender, String email) { -->
        <constructor-arg name="lastName" value="小明"></constructor-arg>
        <constructor-arg name="email" value="xiaoming@xx.com"></constructor-arg>
        <constructor-arg name="gender" value="男"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
    </bean>

    <bean id="person04" class="com.ly.Person">
        <!-- 可以省略name属性，严格按照构造器参数的位置 -->
        <constructor-arg value="小明"></constructor-arg>
        <constructor-arg value="18"></constructor-arg>
        <constructor-arg value="男"></constructor-arg>
        <constructor-arg value="xiaoming@xx.com"></constructor-arg>
    </bean>

    <!-- public Person(String lastName, Integer age, String gender) --> 
    <!-- public Person(String lastName, String email, String gender) -->
    <!-- 重载的情况下type可以指定参数的类型 -->
    <bean id="person05" class="com.ly.Person">
        <constructor-arg value="小丽"></constructor-arg>
        <constructor-arg value="18" index="1" type="java.lang.Integer"></constructor-arg>
        <constructor-arg value="男"></constructor-arg>
    </bean>
    
    <!-- 通过p名称空间为bean赋值 -->
    <!-- 名称空间:在xml中用来防止标签重复 -->
    <!-- 
        <book>
            <b:name>西游记</b:name>
            <price>12</price>
            <author>
                <a:name>吴承恩</a:name>
                <gender>男</gender>
            </author>
        </book>
    -->
    <bean id="person06" class="com.ly.Person" p:age="18" p:email="xiaoming@xx.com" p:lastName="哈哈" p:gender="男">
    </bean>

</beans>
